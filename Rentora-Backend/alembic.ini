# A generic, single database configuration.

[alembic]
# path to migration scripts.
script_location = %(here)s/alembic

# template used to generate migration file names
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path
prepend_sys_path = .

# timezone (optional, requires python>=3.9 or backports.zoneinfo)
# timezone =

# database URL (consumed by env.py, use environment variable)
sqlalchemy.url = %(DATABASE_URL)s

# max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during 'revision' command
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files as revisions
# sourceless = false

# version location specification
# version_locations = %(here)s/bar:%(here)s/bat:%(here)s/alembic/versions

# path_separator
path_separator = os

# set to 'true' to search source files recursively
# recursive_version_locations = false

# output encoding
# output_encoding = utf-8

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S